#ifndef distance_h
#define distance_h
#include"Arduino.h"
#include "LiquidCrystal.h"

class battery {
private:
byte batery[11][2][8]= {
 { {B11111,B10100,B10010,B10001,B10001,B10010,B10100,B11111},{ B11110,B00110,B01011, B10001,B10001,B01011,B00110,B11110} }, //battery critical
{ { B11111, B10000,B10000,B10000,B10000,B10000,B10000,B11111},{  B11110,B00010,B00011,B00001,B00001,B00011,B00010,B11110} }, //battery low
{ { B11111,B10000,B11000,B11000,B11000,B11000,B10000,B11111},{  B11110,B00010,B00011,B00001,B00001,B00011,B00010,B11110} }, //battery 1%
{ { B11111,B10000,B11000,B11000,B11000,B11000,B10000,B11111},{  B11110,B00010,B00011,B00001,B00001,B00011,B00010,B11110} }, //battery 9%
{ { B11111,B10000,B11100,B11100,B11100,B11100,B10000,B11111},{  B11110,B00010,B00011,B00001,B00001,B00011,B00010,B11110} }, //battery 15%
{ { B11111,B10000,B11110,B11110,B11110,B11110,B10000,B11111},{  B11110,B00010,B00011,B00001,B00001,B00011,B00010,B11110} }, //battery 25%
{ { B11111,B10000,B11111,B11111,B11111,B11111,B10000,B11111},{  B11110,B00010,B00011,B00001,B00001,B00011,B00010,B11110} }, //battery 45%
{ { B11111,B10000,B11111,B11111,B11111,B11111,B10000,B11111},{  B11110,B00010,B10011,B10001,B10001,B10011,B00010,B11110} }, //battery 55%
{ { B11111,B10000,B11111,B11111,B11111,B11111,B10000,B11111},{  B11110,B00010,B11011,B11001,B11001,B11011,B00010,B11110} }, //battery 74%
{ { B11111,B10000,B11111,B11111,B11111,B11111,B10000,B11111},{  B11110,B00010,B11011,B11001,B11001,B11011,B00010,B11110} }, //battery 95%
{ { B11111,B10000,B11111,B11111,B11111,B11111,B10000,B11111},{  B11110,B00010,B11111,B11111,B11111,B11111,B00010,B11110} }, //battery 100%
 };

 int vin,bp;
 float sv;
float voltage,vmt ;
int btr,btc;
int btsmap;
float bvcc;
public:

void begin(int br,int bc);
battery(int inp);
void cal_voltage();  
void bat_stat(int bp);
void draw_battery(int r,int c);
void charge();
void Main();
void batvolt(float v); //voltage of battery
};
 
#endif
